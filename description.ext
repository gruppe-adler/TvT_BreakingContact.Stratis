#define MODULES_DIRECTORY node_modules

#include "node_modules\grad-fortifications\grad_fortifications.hpp"
#include "node_modules\@gruppe-adler\replay\ui\defines.hpp"
#include "node_modules\@gruppe-adler\replay\ui\dialog.hpp"
#include "node_modules\grad-islandconfig\cfgGradIslands.hpp"
#include "BC_setup\rscDialogs.hpp"

#include "BC_buymenu\dialog\baseDefines.hpp"
#include "BC_buymenu\dialog\baseRsc.hpp"
#include "node_modules\grad-listBuymenu\grad_listBuymenu.hpp"
#include "BC_ww2\defines\dialog.hpp"

class CfgFunctions {
    #include "BC_buymenu\cfgFunctions.hpp"
    #include "BC_loadouts\cfgFunctions.hpp"

    #include "grad_carryBoat\cfgFunctions.hpp"
    #include "grad_islands\cfgFunctions.hpp"
    #include "grad_civMarker\cfgFunctions.hpp"
    #include "grad_tracking\cfgFunctions.hpp"
    #include "BC_flagsOnVehicles\cfgFunctions.hpp"
    #include "BC_objectives\cfgFunctions.hpp"
    #include "BC_setup\cfgFunctions.hpp"
    #include "BC_buyables\cfgFunctions.hpp"

    #include "BC_vietnam\cfgFunctions.hpp"
    #include "BC_ww2\cfgFunctions.hpp"

    #include "node_modules\grad-listBuymenu\cfgFunctions.hpp"
    #include "node_modules\@gruppe-adler\replay\cfgFunctions.hpp"

    #include "node_modules\grad-loadout\cfgFunctions.hpp"
    #include "node_modules\grad-fortifications\cfgFunctions.hpp"
};

class RscTitles {
    #include "node_modules\grad-fortifications\dialog\hint\title.hpp"
    #include "BC_objectives\rscTitles.hpp"
    #include "BC_setup\rscTitles.hpp"
};

cba_settings_hasSettingsFile = 1;

class GRAD_Replay {
    precision = 5;                                    // precision of replay, 5 means every 5 seconds one snapshot (number)
    trackedSides[] = {"west", "east", "civilian"};    // defines the sides that will be tracked (possible are "west", "east", "independant", "civilian") (array)
    stepsPerTick = 1;                                 // defines steps played back at once (number)
    trackedVehicles = 1;                              // defines if empty and AI steered vehicles will be tracked (0/1)
    trackedAI = 1;                                    // defines if AI will be tracked (0/1)
    sendingChunkSize = 10;                            // higher number means replay loading is faster, but might cause instability / lags during loading (number)
    trackShots = 1;                                   // defines if shots will be tracked (0/1)
    upload = 1;                                       // upload replay to server (0/1)
};

class CfgGradBuymenu {
    vehicleMarkers = 1;
    tracking = 1;
    trackingTag = "Breaking Contact";

    #include "BC_buyables\factions.hpp"
};

OnLoadMission = "A mobile radio station is trying to get a message sent - their adversaries try to stop them from completing the broadcast";
author = "Gruppe Adler";  //appears as author in overview and loading screen
overviewText = "US vs. Russians"; //appears in overview and loading screen
onLoadName = "Breaking Contact"; //mission name for loading screen only
overviewPicture = ""; //mission picture for loading screen only
onLoadMissionTime = True;
disabledAI = 0; //1
enableDebugConsole = 1;
loadScreen = "pic\loading.jpg";
respawnDelay = 9999999;

respawn = 3;
respawnButton = 1;
respawnTemplates[] = {"ace_spectator"};

class Header
{
    gameType = TDM;
    minPlayers = 15;
    maxPlayers = 102;
};


class Params
{
    #include "BC_buyables\params.hpp"

    class TIME_OF_DAY
    {
        title = "Time of Day";
        values[] = {0,1,2,3,4,5,6,6.5,7,8,9,10,11,12,13,14,15,16,16.5,17,17.5,18,19,20,21,22,23};
        texts[] = {"00:00","01:00","02:00","03:00","04:00","05:00 - Full Moon","06:00","06:30 - Dawn","07:00 - Sunrise","08:00","09:00","10:00","11:00","12:00","13:00","14:00","15:00","16:00","16:30 - Sunset will arrive","17:00 - Sunset","17:30 - Dusk","18:00 - really dark already","19:00","20:00","21:00","22:00","23:00 - Moon Rise"};
        default = 7;
    };

    class WEATHER_OVERCAST
    {
        title = "Overcast Settings";
        values[] = {0, 0.4, 0.5, 1, -1};
        texts[] = {"SUNNY", "CLOUDY", "SLIGHT RAIN", "HEAVY RAIN", "RANDOM"};
        default = 0.4;
    };

    class WEATHER_FOG
    {
        title = "Fog Settings";
        values[] = {0, 0.05, 0.1, 0.2, 0.5, 1, -1};
        texts[] = {"None", "0.05", "0.1", "0.2", "0.5", "maximum perversum", "random"};
        default = 0.1;
    };

    class WEATHER_WIND
    {
        title = "Wind Settings";
        values[] = {0, 1, 2, 4, 8, 32, -1};
        texts[] = {"None", "1 m/s", "2 m/s", "4 m/s", "8 m/s", "maximum perversum", "random"};
        default = 1;
    };

    class BLUFOR_SPAWN_DISTANCE
    {
        title = "Spawn Distance BLUFOR";
        values[] = {1000, 2000, 3000, 4000, 5000, 6000};
        texts[] = {"1km", "2km", "3km", "4km","5km","6km"};
        default = 4000;
    };

    class GRAD_MIN_DISTANCE_TO_RADIOPOSITION
    {
        title = "Minimum Distance from radio position to next radio position";
        values[] = {500, 1000, 2000, 3000, 4000, 5000, 6000};
        texts[] = {"500m", "1km", "2km", "3km", "4km","5km","6km"};
        default = 1000;
    };

    class GRAD_TICKS_NEEDED
    {
        title = "Length of sending time";
        values[] = {30, 300, 600, 900, 1320, 1800, 2700, 3600, 4500, 5400, 6300};
        texts[] = {"30s (DEBUG)", "5'","10' (recommended for 3 radio positions)", "15'", "22'", "30' (recommended for 2 radio positions)", "45' (recommended for 1 radio position)", "1h'", "1h15'","1h30'","1h45'"};
        default = 1800;
    };

    class GRAD_INTERVALS_NEEDED
    {
        title = "Number of random places opfor needs to transmit at";
        values[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        texts[] = {"none","2","3","4","5","6","7","8","9","10"};
        default = 2;
    };

    class PLAYER_COUNT
    {
        title = "Determine Player Count (relevant for buy options)";
        values[] = {-1,25,45,65};
        texts[] = {"automatic","20+","40+","60+"};
        default = 65;
    };

    class TIME_ACCELERATION
    {
        title = "Time Acceleration";
        values[] = {1,2,4};
        texts[] = {"normal","2h in 1h","4h in 1h"};
        default = 1;
    };

    class GRAD_REPLAY_PRECISION
    {
        title = "InGame Replay Precision";
        values[] = {1,2,3,4,5};
        texts[] = {"every 1s","every 2s","every 3s","every 4s","every 5s"};
        default = 5;
    };

    class JIP_TIME_ALLOWED
    {
        title = "JIP allowed for";
        values[] = {60, 180, 600, 1800, 999999};
        texts[] = {"1min","3min","10min","30min","always (16h)"};
        default = 999999;
    };

    class CONQUER_MODE {
        title = "Win Condition";
        values[] = {0, 1};
        texts[] =  {"Conquer Radio Truck", "Destroy Radio Truck"};
        default = 0;
    };

     class PREPARATION_TIME {
        title = "Preparation time";
        values[] = {0,60,120,180,240,300,480,600,900};
        texts[] = {"off","1min","2min","3min","4min","5min","8min","10min","15min"};
        default = 300;
    };
};

class CfgDebriefing
{
    class OpforWinsByElimination
    {
        title = "Opfor wins";
        subtitle = "by elimination";
        description = "All Blufor units are eliminated.";
        picture = "pic\gruppe-adler.paa";
    };

    class OpforWinsByTransmission
    {
        title = "Opfor wins";
        subtitle = "by completing transmission";
        description = "Opfor managed to complete their transmission. Too slow Blufor, next time hurry up!";
        picture = "pic\gruppe-adler.paa";
    };

    class OpforWinsByBluforDestroyingTheTruck
    {
        title = "Opfor wins";
        subtitle = "The radio truck was destroyed by Blufor";
        description = "Next time better make sure where to shoot at.";
        picture = "pic\gruppe-adler.paa";
    };

    class BluforWinsByElimination
    {
        title = "Blufor wins";
        subtitle = "by elimination";
        description = "All Opfor units are eliminated.";
        picture = "pic\gruppe-adler.paa";
    };

    class BluforWinsByDestruction
    {
        title = "Blufor wins";
        subtitle = "by destroying the radio unit";
        description = "Blufor managed to destroy the radio unit. Opfor, you had one job!";
        picture = "pic\gruppe-adler.paa";
    };

    class BluforWinsByConquering
    {
        title = "Blufor wins";
        subtitle = "by conquering the radio unit";
        description = "Blufor managed to conquer the radio unit. Opfor, you had one job!";
        picture = "pic\gruppe-adler.paa";
    };

    class BluforWinsByOpforDestroyingTheTruck
    {
        title = "Blufor wins";
        subtitle = "The radio truck was destroyed by Opfor";
        description = "Next time better make sure where to shoot at.";
        picture = "pic\gruppe-adler.paa";
    };

    class DrawRadioTruckDestroyed
    {
        title = "No one wins";
        subtitle = "The radio truck was destroyed by unknown source";
        description = "Next time better make sure where to shoot at.";
        picture = "pic\gruppe-adler.paa";
    };

    class DrawError
    {
        title = "No one wins";
        subtitle = "End mission error: couldnt decide on winner";
        description = "Blame nomisum, as always.";
        picture = "pic\gruppe-adler.paa";
    };
};

class CfgDebriefingSections
{
    class TransmissionTime
    {
        title = "Transmission Completion";
        variable = "BC_transmissionPercentage";
    };
};

class CfgSounds
{
    #include "grad_carryBoat\cfgSounds.hpp"
    #include "BC_buymenu\cfgSounds.hpp"

    class beam
    {
        name = "beam";
        // filename, volume, pitch
        sound[] = {"sounds\beam.ogg", 1, 1};
        // subtitle delay in seconds, subtitle text
        titles[] = {0, ""};
    };
    class beep
    {
        name = "beep";
        // filename, volume, pitch
        sound[] = {"sounds\beep2.ogg", 1, 1};
        // subtitle delay in seconds, subtitle text
        titles[] = {0, ""};
    };
    class signal_lost
    {
        name = "signal_lost";
        // filename, volume, pitch
        sound[] = {"sounds\signal_lost.ogg", 1, 1};
        // subtitle delay in seconds, subtitle text
        titles[] = {0, ""};
    };
    class signal_distortion
    {
        name = "signal_distortion";
        // filename, volume, pitch
        sound[] = {"sounds\signal_distortion.ogg", 0.5, 1};
        // subtitle delay in seconds, subtitle text
        titles[] = {0, ""};
    };

};




class Loadouts {
    #include "LIST_N.hpp"

    resetLoadout = 1;
    handleRadios = 1;

    class AllUnits {
        binoculars = "Binocular";
        map = "ItemMap";
        compass = "ItemCompass";
        watch = "ItemWatch";
    };
    class Faction {
        #include "BC_loadouts\factions.hpp"
    };
};



class CfgGradFortifications {
    boundingBoxSizeFactor = 1;
    canDemolishDefault = 1;
    demolitionTimeFactor = 1;
    playerInventorySize = 1;
    vehicleInventorySizeFactor = 1;
    canStoreInLandVehicles = 1;
    canStoreInShips = 0;
    canStoreInHelicopters = 0;
    canStoreInPlanes = 0;

    class Land_BagFence_Long_F {
        boundingBoxSize = 0.8;
        canFloat = 0;
        canCollide = 0;
        size = 1;
        demolitionTime = 10;
    };

    class Land_BagFence_End_F {
        boundingBoxSize = 0.8;
        canFloat = 0;
        canCollide = 0;
        size = 1;
        demolitionTime = 10;
    };

    class rhs_Flag_DNR_F {
        boundingBoxSize = 0.1;
        canFloat = 0;
        canCollide = 1;
        size = 0.5;
        demolitionTime = 3;
    };

    class Land_Wreck_Ural_F {
        boundingBoxSize = 0.9;
        canFloat = 0;
        canCollide = 0;
        size = 1;
        demolitionTime = 30;
    };

    class Land_Wreck_UAZ_F {
        boundingBoxSize = 0.9;
        canFloat = 0;
        canCollide = 0;
        size = 1;
        demolitionTime = 15;
    };

    class Land_Razorwire_F {
        boundingBoxSize = 0.1;
        canFloat = 0;
        canCollide = 1;
        size = 0.5;
        demolitionTime = 10;
    };

    class MetalBarrel_burning_F {
        boundingBoxSize = 0.9;
        canFloat = 0;
        canCollide = 1;
        size = 0.5;
        demolitionTime = 5;
    };

    class Campfire_burning_F {
        boundingBoxSize = 0.9;
        canFloat = 0;
        canCollide = 1;
        size = 0.5;
        demolitionTime = 5;
    };

    class Land_PortableLight_single_F {
        boundingBoxSize = 0.9;
        canFloat = 0;
        canCollide = 1;
        size = 0.5;
        demolitionTime = 5;
    };
};
// Streamator Loading Instructions
class CLib {
    Modules[] = {"CLib", "Streamator"};
};
